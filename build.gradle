plugins {
    id "com.jfrog.bintray" version "1.7.3"
}
repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'com.wedeploy'
version = 1.0

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile "redis.clients:jedis:2.9.0"
    testCompile "junit:junit:4.12"
}

task sourceJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allJava
}
javadoc {
    failOnError = false
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives jar
    archives sourceJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourceJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')

    publications = ['mavenJava']

    dryRun = false
    publish = true

    pkg {
        userOrg = 'liferay'
        repo = 'wedeploy'
        name = project.name
        desc = project.description
        licenses = ['BSD 2-Clause']
        vcsUrl = 'https://github.com/wedeploy/jrsmq'
        issueTrackerUrl = 'https://github.com/wedeploy/jrsmq/issues'
        publicDownloadNumbers = true

        version {
            name = project.version
            vcsTag = project.version
        }
    }
}

tasks.withType(Test) {
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat = 'full'
    }
}

task setUpRedis {
    doLast {
        exec {
            executable "docker"
            args "run", "-p", "6379:6379", "-d", "--name", "redis", "redis:latest"
        }
    }
}

task tearDownRedis {
    doLast {
        exec {
            executable "docker"
            args "rm", "-f", "-v", "redis"
        }
    }
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}